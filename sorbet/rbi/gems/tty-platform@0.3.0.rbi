# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tty-platform` gem.
# Please instead update this file by running `bin/tapioca gem tty-platform`.


# source://tty-platform//lib/tty/platform/version.rb#3
module TTY; end

# Detects system platform properties
#
# @api public
#
# source://tty-platform//lib/tty/platform/version.rb#4
class TTY::Platform
  # Create platform properties
  #
  # @api public
  # @return [Platform] a new instance of Platform
  #
  # source://tty-platform//lib/tty/platform.rb#38
  def initialize(arch = T.unsafe(nil)); end

  # Queries for system architecture information
  #
  # @api public
  # @return [String]
  #
  # source://tty-platform//lib/tty/platform.rb#79
  def architecture; end

  # Returns processor name, e.g. 'amdk6'
  #
  # @api public
  #
  # source://tty-platform//lib/tty/platform.rb#23
  def cpu; end

  # source://tty-platform//lib/tty/platform.rb#46
  def linux?; end

  # source://tty-platform//lib/tty/platform.rb#46
  def mac?; end

  # Check if platform matches given systems
  #
  # @api public
  # @return [Boolean]
  #
  # source://tty-platform//lib/tty/platform.rb#70
  def match_os?(matcher); end

  # Returns the system/OS name, e.g. 'darwin'
  #
  # @api public
  #
  # source://tty-platform//lib/tty/platform.rb#28
  def os; end

  # @api public
  # @return [Array[String]]
  #
  # source://tty-platform//lib/tty/platform.rb#86
  def to_a; end

  # String representation
  #
  # @api public
  #
  # source://tty-platform//lib/tty/platform.rb#93
  def to_s; end

  # source://tty-platform//lib/tty/platform.rb#46
  def unix?; end

  # Returns system's release version, e.g. '10.8.1'
  #
  # @api public
  #
  # source://tty-platform//lib/tty/platform.rb#33
  def version; end

  # source://tty-platform//lib/tty/platform.rb#46
  def windows?; end

  # Detect if using windows path delimiter
  #
  # @api public
  # @return [Boolean]
  #
  # source://tty-platform//lib/tty/platform.rb#61
  def windows_file_path?; end

  private

  # Infer system properties from architecture information
  #
  # @api private
  # @return [Array[String, String String]]
  #
  # source://tty-platform//lib/tty/platform.rb#104
  def detect_system_properties(arch); end

  # @api private
  # @param system [String]
  #
  # source://tty-platform//lib/tty/platform.rb#119
  def find_os_and_version(system); end
end

# @api public
#
# source://tty-platform//lib/tty/platform.rb#16
TTY::Platform::LINUX_PATTERN = T.let(T.unsafe(nil), Regexp)

# @api public
#
# source://tty-platform//lib/tty/platform.rb#18
TTY::Platform::MAC_PATTERN = T.let(T.unsafe(nil), Regexp)

# @api public
#
# source://tty-platform//lib/tty/platform.rb#14
TTY::Platform::UNIX_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://tty-platform//lib/tty/platform/version.rb#5
TTY::Platform::VERSION = T.let(T.unsafe(nil), String)

# @api public
#
# source://tty-platform//lib/tty/platform.rb#12
TTY::Platform::WINDOWS_PATTERN = T.let(T.unsafe(nil), Regexp)
